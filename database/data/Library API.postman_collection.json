{
	"info": {
		"_postman_id": "47d969f3-c7f4-44c1-8a70-0d387542bbeb",
		"name": "Library API",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "14810386",
		"_collection_link": "https://new-druckland.postman.co/workspace/new-druckland-Workspace~3d6e19fc-2aae-47d7-84e0-5ca2f11264de/collection/14810386-47d969f3-c7f4-44c1-8a70-0d387542bbeb?action=share&source=collection_link&creator=14810386"
	},
	"item": [
		{
			"name": "Bookshelves",
			"item": [
				{
					"name": "Get All Bookshelves",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://library-api.test/api/bookshelves"
					},
					"response": []
				},
				{
					"name": "Store new bookshelves",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner Bookshelf1\",\r\n    \"location\": \"South Maia1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/bookshelves"
					},
					"response": []
				},
				{
					"name": "Get Single Bookshelves",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner Bookshelf1\",\r\n    \"location\": \"South Maia1\"\r\n}"
						},
						"url": "http://library-api.test/api/bookshelves/11"
					},
					"response": []
				},
				{
					"name": "Update Bookshelves",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "1|snsNTzLBQXooARdTKpL47UcCNJzwvxqIRlhxyssh3a8a7adf"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner update\",\r\n    \"location\": \"South Maia update\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/bookshelves/11"
					},
					"response": []
				},
				{
					"name": "Delete Bookshelves",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner update\",\r\n    \"location\": \"South Maia update\"\r\n}"
						},
						"url": "http://library-api.test/api/bookshelves/11"
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Get All Books",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner update\",\r\n    \"location\": \"South Maia update\"\r\n}"
						},
						"url": {
							"raw": "http://library-api.test/api/books",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"books"
							],
							"query": [
								{
									"key": "bookshelf_id",
									"value": "8",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Store New Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookshelf_id\" : \"8\",\r\n    \"title\": \"Dream\",\r\n    \"author\": \"Alam\",\r\n    \"published_year\": \"2025\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://library-api.test/api/books",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"books"
							],
							"query": [
								{
									"key": "bookshelf_id",
									"value": "8",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Book",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilkinson-Gleichner update\",\r\n    \"location\": \"South Maia update\"\r\n}"
						},
						"url": "http://library-api.test/api/books/21"
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookshelf_id\" : \"7\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/books/21"
					},
					"response": []
				},
				{
					"name": "Search By Author | Title",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookshelf_id\" : \"7\"\r\n}"
						},
						"url": {
							"raw": "http://library-api.test/api/books/search?query=Dream",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"books",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "Dream"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://library-api.test/api/books/21",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"books",
								"21"
							],
							"query": [
								{
									"key": "title",
									"value": "no title",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Chapters",
			"item": [
				{
					"name": "Get All Chapters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://library-api.test/api/chapters",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"chapters"
							],
							"query": [
								{
									"key": "title",
									"value": "dream",
									"disabled": true
								},
								{
									"key": "author",
									"value": "no",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Store New Chapter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"book_id\": 12,\r\n    \"title\": \"Sint non reiciendis ducimus autem numquam.\",\r\n    \"chapter_number\": 25\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://library-api.test/api/chapters",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"chapters"
							],
							"query": [
								{
									"key": "title",
									"value": "dream",
									"disabled": true
								},
								{
									"key": "author",
									"value": "no",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Chapter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://library-api.test/api/chapters/4"
					},
					"response": []
				},
				{
					"name": "Update Chapter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"book_id\": 12,\r\n    \"title\": \"Sint non reiciendis ducimus autem numquam update\",\r\n    \"chapter_number\": 21\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/chapters/1"
					},
					"response": []
				},
				{
					"name": "Delete Chapter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"book_id\": 12,\r\n    \"title\": \"Sint non reiciendis ducimus autem numquam update\",\r\n    \"chapter_number\": 21\r\n}"
						},
						"url": "http://library-api.test/api/chapters/1"
					},
					"response": []
				},
				{
					"name": "Search By Content",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chapter_id\": 41,\r\n    \"page_number\": 101,\r\n    \"content\": \"This is my awesome content.\"\r\n}"
						},
						"url": "http://library-api.test/api/chapters/4/content"
					},
					"response": []
				}
			]
		},
		{
			"name": "Pages",
			"item": [
				{
					"name": "Get All Pages",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"book_id\": 12,\r\n    \"title\": \"Sint non reiciendis ducimus autem numquam.\",\r\n    \"chapter_number\": 25\r\n}"
						},
						"url": {
							"raw": "http://library-api.test/api/pages?chapter_id=15",
							"protocol": "http",
							"host": [
								"library-api",
								"test"
							],
							"path": [
								"api",
								"pages"
							],
							"query": [
								{
									"key": "chapter_id",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Store New Page",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chapter_id\": 41,\r\n    \"page_number\": 101,\r\n    \"content\": \"This is my awesome content.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/pages"
					},
					"response": []
				},
				{
					"name": "Get Single Page",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://library-api.test/api/pages/101"
					},
					"response": []
				},
				{
					"name": "Update Page",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"This is my awesome content. updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://library-api.test/api/pages/101"
					},
					"response": []
				},
				{
					"name": "Delete Page",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"This is my awesome content. updated\"\r\n}"
						},
						"url": "http://library-api.test/api/pages/101"
					},
					"response": []
				}
			]
		},
		{
			"name": "Register",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alam",
							"type": "text"
						},
						{
							"key": "email",
							"value": "alam2@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "pass12345",
							"type": "text"
						},
						{
							"key": "password_confirmation",
							"value": "pass12345",
							"type": "text"
						}
					]
				},
				"url": "http://library-api.test/api/register"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"alam2@gmail.com\",\n    \"password\": \"pass12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://library-api.test/api/login",
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{token}}"
					}
				},
				"method": "POST",
				"header": [],
				"url": "http://library-api.test/api/logout"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}